{"version":3,"sources":["context/apiCode.js","assets/logo.png","assets/star2.png","assets/heart.png","assets/noImage.png","components/nav/nav.js","components/footer/footer.js","components/details/details.js","components/browse/browse_components/pagination.js","components/browse/browse_components/browse_content.js","components/browse/browse.js","components/advanceSearch/advanceSearch.js","components/viewAllTrending/viewAllTrending.js","App.js","serviceWorker.js","index.js"],"names":["API_CODE","createContext","ApiCode","props","Provider","value","code","children","module","exports","NavBar","useContext","useState","input","setInput","searched","setSearched","optionList","className","document","querySelector","classList","toggle","removeActivateNav","remove","eraseAll","useEffect","length","axios","get","then","res","search","data","results","filter","media_type","onClick","to","src","logo","alt","htmlFor","type","id","placeholder","autoComplete","onChange","e","target","map","i","key","poster_path","original_title","original_name","Footer","href","class","Details","window","scrollTo","location","pathname","setPathname","details","genres","video","reviews","infos","setinfos","request","resDetails","resVideos","resReview","undefined","catch","err","console","log","listingGenres","genre","name","listingReviews","rev","url","author","content","homepage","title","Date","first_air_date","getFullYear","release_date","heart","width","height","popularity","star2","vote_average","overview","Pagination","pagination","params","category","next","prev","changePage","paginationModelPC","firstPages","slice","includes","page","lastPages","num","otherPages","paginationModelMobile","BrowseComponent","pageContent","show","test","memo","query","URLSearchParams","useLocation","total_pages","setparams","setPagination","addActive","querySelectorAll","forEach","btn","add","queryPage","Number","paginationArray","Array","from","_","history","push","textContent","showCategory","AdvanceSearch","info","setInfo","sort_movie","sort_tv","sort","genre_choice","year","pages","setParams","onChangeParams","advance_content","noImage","onSubmit","preventDefault","min","max","now","minLength","maxLength","defaultValue","toString","ViewAll","setInfos","Home","lazy","App","fallback","exact","path","component","render","Boolean","hostname","match","ReactDOM","StrictMode","getElementById","navigator","serviceWorker","ready","registration","unregister","error","message"],"mappings":"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","file":"static/js/main.5d1479e9.chunk.js","sourcesContent":["import React, {createContext} from 'react';\r\n\r\nexport const API_CODE = createContext();\r\nconst ApiCode = (props) => {\r\n    const code= '2effcb37ac7b1550616d653eea9cb4d6';\r\n    return ( \r\n        <API_CODE.Provider value={{code}}>\r\n            {props.children}\r\n        </API_CODE.Provider>\r\n     );\r\n}\r\n \r\nexport default ApiCode;","module.exports = __webpack_public_path__ + \"static/media/logo.5bd58f1a.png\";","module.exports = __webpack_public_path__ + \"static/media/star2.9b0f52ad.png\";","module.exports = __webpack_public_path__ + \"static/media/heart.f0e79c23.png\";","module.exports = __webpack_public_path__ + \"static/media/noImage.b1edc35f.png\";","import React, {useState, useEffect, useContext} from 'react';\r\nimport '../../styles/css/nav.css';\r\nimport logo from '../../assets/logo.png';\r\nimport {Link} from 'react-router-dom';\r\nimport { API_CODE } from '../../context/apiCode';\r\nimport axios from 'axios';\r\n\r\nconst NavBar = () => {\r\n    const {code} = useContext(API_CODE); \r\n    const [input, setInput] = useState('');\r\n    const [searched, setSearched] = useState([]);\r\n    const animateSearch = () => {\r\n        document.querySelector('#quickSearch').classList.toggle('searchClicked');\r\n        document.querySelector('#quickSearch').value = '';\r\n        setSearched([]);\r\n        setInput('');\r\n    };\r\n    const animateNav = () => {\r\n        document.querySelector('.nav-option-container').classList.toggle('nav-option-container-active');\r\n        \r\n    };\r\n    const optionList = (className) => {\r\n        document.querySelector(className).classList.toggle('dropdown');\r\n    };\r\n\r\n    const removeActivateNav = (className) => {\r\n        document.querySelector('.nav-option-container').classList.remove('nav-option-container-active');\r\n    };\r\n    const onChangeInput = (e) => {\r\n        setInput(e.target.value);\r\n    }\r\n    const eraseAll = () => {\r\n        setSearched([]);\r\n        setInput('');\r\n    }\r\n\r\n    useEffect(() => {\r\n        if(input.length === 0){\r\n            setSearched([]);\r\n        }else{\r\n            axios.get(`https://api.themoviedb.org/3/search/multi?api_key=${code}&query=${input}`)\r\n                .then(res => {\r\n                    const search = res.data.results.filter(data => data.media_type !== 'person');\r\n                    setSearched(search);\r\n                });\r\n        };\r\n        \r\n    }, [input]);\r\n\r\n    return ( \r\n        <div className='nav-container'>\r\n            <div className='logo-search-container'>\r\n                \r\n                <div className='logo-container'>\r\n                    <button onClick={animateNav}><i className='fa fa-bars'></i></button>\r\n                    <Link to='/'><img src={logo} alt='logo image'/></Link>\r\n                    <Link to=''><h1>Popcorn Time</h1></Link>\r\n                    \r\n                    \r\n                </div>\r\n                <div className='search-container'>\r\n                    <label onClick={animateSearch} htmlFor='quickSearch'><i className='fa fa-search'></i></label>\r\n                    <input value={input} type='text' id='quickSearch' placeholder='Quick search' autoComplete=\"off\" onChange={onChangeInput}/>\r\n                    <div className='searchList'>\r\n                        {searched.map((search, i) => (\r\n                            <Link key={i} to={`/${search.media_type}/${search.id}`} >\r\n                                <div className='searched_content' onClick={eraseAll}>\r\n                                    <img src={`http://image.tmdb.org/t/p/w500//${search.poster_path}`} alt={search.original_title || search.original_name}></img>\r\n                                    <h1>{search.original_title || search.original_name}</h1>\r\n                                </div>\r\n                            </Link>\r\n                            \r\n                        ))}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div className='nav-option-container'>\r\n                <ul className='options'>\r\n                    <li className='movies'>\r\n                        <div onClick={() => optionList('.movies .optionList')}>Movies</div>\r\n                        <ul className='optionList'>\r\n                            <Link onClick={removeActivateNav} to='/browse/movie/popular?page=1'><li>Popular</li></Link>\r\n                            <Link onClick={removeActivateNav} to='/browse/movie/now_playing?page=1'><li>Now Playing</li></Link>\r\n                            <Link onClick={removeActivateNav} to='/browse/movie/upcoming?page=1'><li>Upcoming</li></Link>\r\n                            <Link onClick={removeActivateNav} to='/browse/movie/top_rated?page=1'><li>Top Rated</li></Link>\r\n                        </ul>\r\n                    </li>\r\n                    <li className='tv'>\r\n                        <div onClick={() => optionList('.tv .optionList')}>TV Shows</div>\r\n                        <ul className='optionList'>\r\n                            <Link onClick={removeActivateNav} to='/browse/tv/popular?page=1'><li>Popular</li></Link>\r\n                            <Link onClick={removeActivateNav} to='/browse/tv/airing_today?page=1'><li>Airing Today</li></Link>\r\n                            <Link onClick={removeActivateNav} to='/browse/tv/on_the_air?page=1'><li>On TV</li></Link>\r\n                            <Link onClick={removeActivateNav} to='/browse/tv/top_rated?page=1'><li>Top Rated</li></Link>\r\n                        </ul>\r\n                    </li>\r\n                        <Link onClick={removeActivateNav} to='/advance-search'><li className='genres'><div>Advance Search</div></li></Link>\r\n                </ul>\r\n                <div onClick={removeActivateNav} className='nav-option-space'>\r\n                    {/* <p></p> */}\r\n                </div>\r\n            </div>\r\n            \r\n        </div>\r\n     );\r\n}\r\n \r\nexport default NavBar;","import React from 'react';\r\nimport '../../styles/css/footer.css';\r\nimport logo from '../../assets/logo.png';\r\nimport {Link} from 'react-router-dom';\r\n\r\nconst Footer = () => {\r\n    return ( \r\n        <div className='footer'>\r\n          \r\n            <div className='logo'>\r\n                <img src={logo}></img>\r\n                <h1>Popcorn Time</h1>\r\n            </div>\r\n        \r\n            <div className='nav-footer'>\r\n                <ul className='options'>\r\n                    <li>\r\n                        <h3>Movies</h3>\r\n                        <ul className='categories'>\r\n                        \r\n                            <Link to='/browse/movie/popular?page=1'><li>Popular</li></Link>\r\n                            <Link to='/browse/movie/now_playing?page=1'><li>Now Playing</li></Link>\r\n                            <Link to='/browse/movie/upcoming?page=1'><li>Upcoming</li></Link>\r\n                            <Link to='/browse/movie/top_rated?page=1'><li>Top Rated</li></Link>\r\n                       \r\n                        </ul>\r\n                    </li>\r\n                    <li>\r\n                        <h3>TV Shows</h3>\r\n                        <ul className='categories'>\r\n                            <Link to='/browse/tv/popular?page=1'><li>Popular</li></Link>\r\n                            <Link to='/browse/tv/airing_today?page=1'><li>Airing Today</li></Link>\r\n                            <Link to='/browse/tv/on_the_air?page=1'><li>On TV</li></Link>\r\n                            <Link to='/browse/tv/top_rated?page=1'><li>Top Rated</li></Link>\r\n                        </ul>\r\n                    </li>\r\n                    \r\n                    <Link  to='/advance-search'><li className='genres'><h3>Advance Search</h3></li></Link>\r\n                </ul>\r\n            </div>\r\n            <div className='social-media'>\r\n                <h3>Follow us on</h3>\r\n                <ul>\r\n                    <a href='https://www.facebook.com/'><li><i class=\"fa fa-facebook\"></i></li></a>\r\n                    <a href='https://twitter.com/'><li><i class=\"fa fa-twitter\"></i></li></a>\r\n                    <a href='https://instagram.com/'><li><i class=\"fa fa-instagram\"></i></li></a>\r\n                </ul>\r\n            </div>\r\n            <div className='copyright'>\r\n                <p>© 2020 Popcorn Time, Yu Takaki</p>\r\n            </div>\r\n        </div>\r\n     );\r\n}\r\n \r\nexport default Footer;","import React, {useState, useEffect, useContext} from 'react';\r\nimport axios from 'axios';\r\nimport { API_CODE } from '../../context/apiCode';\r\nimport '../../styles/css/details.css';\r\nimport star2 from '../../assets/star2.png';\r\nimport heart from '../../assets/heart.png'\r\n\r\nconst Details = (props) => {\r\n    window.scrollTo(0, 0);\r\n    const {code} = useContext(API_CODE);\r\n    const [pathname, setPathname] = useState(props.location.pathname);\r\n    const [infos, setinfos] = useState({\r\n        details : {\r\n            genres : []\r\n        },\r\n        video : {},\r\n        reviews : {\r\n            results : []\r\n        }\r\n    });\r\n    const request = () => {\r\n        axios.get(`https://api.themoviedb.org/3${pathname}?api_key=${code}&language=en-US`)\r\n            .then(resDetails => {\r\n                \r\n                axios.get(`https://api.themoviedb.org/3${pathname}/videos?api_key=${code}&language=en-US`)\r\n                    .then(resVideos => {\r\n                        axios.get(`https://api.themoviedb.org/3${pathname}/reviews?api_key=${code}&language=en-US&page=1`)\r\n                        .then(resReview => {\r\n                            const video = resVideos.data.results.length > 0 ? resVideos.data.results[0] : {key : undefined};\r\n                            const reviews = resReview.data.results.length > 0 ? resReview.data : {results : []};\r\n                            setinfos({\r\n                                details : resDetails.data,\r\n                                video,\r\n                                reviews\r\n                            })\r\n\r\n                        })\r\n                        \r\n                    })\r\n            })\r\n            .catch(err => console.log(err));\r\n    }\r\n    useEffect(() => {\r\n        request();\r\n    },[])\r\n    useEffect(() => {\r\n        if(pathname !== props.location.pathname){\r\n            setPathname(props.location.pathname);\r\n        }\r\n        return\r\n\r\n    });\r\n    useEffect(() => {\r\n        request();\r\n\r\n    }, [pathname]);\r\n    useEffect(() => {\r\n        console.log(infos)\r\n    },[infos])\r\n\r\n\r\n\r\n    const listingGenres = infos.details.genres.map(genre => (\r\n        <h3>{genre.name}</h3>\r\n    ))\r\n\r\n    const listingReviews = infos.reviews.length > 0 ? infos.reviews.results.map((rev, i) => (\r\n        <div className='review-container'>\r\n            <a href={rev.url}>\r\n                <h4>{rev.author}</h4>\r\n            </a>\r\n            <p className={`review-content${i}`}>{rev.content}</p>\r\n            {}\r\n        </div>\r\n    )) : (<h2>No Reviews</h2>)\r\n    return ( \r\n        <div className='details_page'>\r\n            \r\n            <div className='showDescription'>\r\n                <div className='poster'>\r\n                    <img src={`http://image.tmdb.org/t/p/w500//${infos.details.poster_path}`} alt={infos.details.original_title || infos.details.original_name} />\r\n                    <a href={`${infos.details.homepage}`} target='_blank'>\r\n                        <div>\r\n                            <h3>Watch Online</h3>\r\n                        </div>\r\n                    </a>\r\n                </div>\r\n                <div className='details_content'>\r\n                    <div className='title'>\r\n                        <h1>{infos.details.title || infos.details.original_name}</h1>\r\n                        <h3>({new Date(infos.details.first_air_date).getFullYear() || new Date(infos.details.release_date).getFullYear()})</h3>\r\n                        \r\n                    </div>\r\n                    <div className='genres'>\r\n                        {listingGenres}\r\n                    </div>\r\n                        \r\n                    \r\n                    <div className='rating'>\r\n                        <div className='popularity'>\r\n                            <img src={heart} width='20' height='20'/>\r\n                            <h3>{infos.details.popularity} - Popularity</h3>\r\n\r\n                        </div>\r\n                        <div className='vote-average'>\r\n                            <img src={star2} width='20' height='20'/>\r\n                            <h3>{infos.details.vote_average} - Vote Average</h3>\r\n\r\n                        </div>\r\n                        \r\n                    </div>\r\n                    \r\n                </div>\r\n            </div>\r\n            <div className='overview'>\r\n                <h1>Overview</h1>\r\n                <p>{infos.details.overview}</p>\r\n            </div>\r\n            <div className='trailer_reviews_container'>\r\n                <div className='trailer'>\r\n                    <iframe\r\n                        src={`https://www.youtube.com/embed/${infos.video.key}`}>\r\n                    </iframe>\r\n                </div>\r\n                <div className='reviews'>\r\n                    <h1>Reviews</h1>\r\n                    {listingReviews}\r\n                </div>\r\n\r\n            </div>\r\n            \r\n            \r\n        </div>\r\n     );\r\n}\r\n \r\nexport default Details;","import React from 'react'\r\n\r\n\r\nconst Pagination = ({pagination, params, category, next, prev, changePage}) => {\r\n    const paginationModelPC = pagination.firstPages.slice(0,4).includes(params.page) || pagination.lastPages.slice(1).includes(params.page) ? (\r\n        <>\r\n            <div className='page_btn' onClick={prev}>prev</div>\r\n            {pagination.firstPages.map((num, i) => (\r\n                <div key={i} className={`page_btn btn${num}`} onClick={changePage}>{num}</div>\r\n            ))}\r\n            <div className='other_pages'>...</div>\r\n            {pagination.lastPages.map((num, i) => (\r\n                <div key={i} className={`page_btn btn${num}`} onClick={changePage}>{num}</div>\r\n            ))}\r\n            <div className='page_btn' onClick={next}>next</div>\r\n        </>\r\n    ) : (\r\n        <>\r\n            <div className='page_btn' onClick={prev}>prev</div>\r\n            {pagination.firstPages.slice(0, 3).map((num, i) => (\r\n                <div key={i} className={`page_btn btn${num}`} onClick={changePage}>{num}</div>\r\n            ))}\r\n            <div className='other_pages'>...</div>\r\n            {pagination.otherPages.map((num, i) => (\r\n                <div key={i} className={`page_btn btn${num}`} onClick={changePage}>{num}</div>\r\n            ))}\r\n            <div className='other_pages'>...</div>\r\n           \r\n            {pagination.lastPages.slice(2).map((num, i) => (\r\n                <div key={i} className={`page_btn btn${num}`} onClick={changePage}>{num}</div>\r\n            ))}\r\n            <div className='page_btn' onClick={next}>next</div>\r\n        </>\r\n    );\r\n    \r\n    const paginationModelMobile = pagination.firstPages.slice(0,4).includes(params.page)? (\r\n        <>\r\n            <div className='page_btn' onClick={prev}>prev</div>\r\n            {pagination.firstPages.map((num, i) => (\r\n                <div key={i} className={`page_btn btn${num}`} onClick={changePage}>{num}</div>\r\n            ))}\r\n            <div className='other_pages'>...</div>\r\n            <div className={`page_btn btn${pagination.lastPages[pagination.lastPages.length - 1]}`} onClick={changePage}>{pagination.lastPages[pagination.lastPages.length - 1]}</div>\r\n            <div className='page_btn' onClick={next}>next</div>\r\n        </>\r\n    ) : pagination.lastPages.slice(1).includes(params.page) ? (\r\n        <>\r\n            <div className='page_btn' onClick={prev}>prev</div>\r\n            {pagination.firstPages.slice(0, 1).map((num, i) => (\r\n                <div  key={i} className={`page_btn btn${num}`} onClick={changePage}>{num}</div>\r\n            ))}\r\n            <div className='other_pages'>...</div>\r\n            {pagination.lastPages.map((num, i) => (\r\n                <div key={i} className={`page_btn btn${num}`} onClick={changePage}>{num}</div>\r\n            ))}\r\n            <div className='page_btn' onClick={next}>next</div>\r\n        </>\r\n    ) : (\r\n        <>\r\n            <div className='page_btn' onClick={prev}>prev</div>\r\n            {pagination.firstPages.slice(0, 1).map((num, i) => (\r\n                <div key={i} className={`page_btn btn${num}`} onClick={changePage}>{num}</div>\r\n            ))}\r\n            <div className='other_pages'>...</div>\r\n            {pagination.otherPages.map((num, i)=> (\r\n                <div key={i} className={`page_btn btn${num}`} onClick={changePage}>{num}</div>\r\n            ))}\r\n            <div className='other_pages'>...</div>\r\n           \r\n            <div className={`page_btn btn${pagination.lastPages[pagination.lastPages.length - 1]}`} onClick={changePage}>{pagination.lastPages[pagination.lastPages.length - 1]}</div>\r\n            <div className='page_btn' onClick={next}>next</div>\r\n        </>\r\n    \r\n    );\r\n    return ( \r\n        <>\r\n            {category === 'pc' ? paginationModelPC : paginationModelMobile}\r\n        </>\r\n\r\n     );\r\n}\r\n \r\nexport default Pagination;","import React from 'react';\r\nimport {Link} from 'react-router-dom';\r\n\r\nconst BrowseComponent = ({infos, params}) => {\r\n    const pageContent = infos.results.map((show, i) => (\r\n        <div className='poster' key={i}>\r\n            <div className='poster_container'>\r\n                    <img src={`http://image.tmdb.org/t/p/w500//${show.poster_path}`} alt={show.original_title || show.original_name}/>\r\n\r\n                <Link to={`/${/(movie)/.test(params.pathname) ? 'movie' : /(tv)/.test(params.pathname) ? 'tv' : ''}/${show.id}`}>\r\n                    <div className='posterHover'>\r\n                        <h3>{show.vote_average} / 10</h3>\r\n                        <h1>View Details</h1>\r\n                    </div>\r\n\r\n                </Link>\r\n            </div>\r\n            <div className='poster_title'>\r\n                <h4>{show.original_title || show.original_name}</h4>\r\n\r\n            </div>\r\n        </div>\r\n    ))\r\n    return ( \r\n        <>\r\n            {pageContent}\r\n        </>\r\n     );\r\n}\r\n \r\nexport default BrowseComponent;","import React, {useState, useEffect, useContext, memo} from 'react';\r\nimport axios from 'axios';\r\nimport { API_CODE } from '../../context/apiCode';\r\nimport '../../styles/css/browse.css';\r\nimport {Link, useLocation} from 'react-router-dom';\r\nimport Pagination from '../browse/browse_components/pagination'\r\nimport BrowseComponent from './browse_components/browse_content';\r\n\r\nconst Browse = (props) => {\r\n    function useQuery() {\r\n        return new URLSearchParams(useLocation().search);\r\n    }\r\n    window.scrollTo(0, 0);\r\n    let query = useQuery();\r\n    const {code} = useContext(API_CODE);\r\n    const [infos, setinfos] = useState({\r\n        total_pages : 0,\r\n        results : [{\r\n            genres: []\r\n        }],\r\n    })\r\n    const [params, setparams] = useState({\r\n        page : query.get('page') || 1,\r\n        pathname : props.location.pathname\r\n        \r\n    })\r\n    const [pagination, setPagination] = useState({\r\n        otherPages : [],\r\n        firstPages : [],\r\n        lastPages : []\r\n    })\r\n    const addActive = () => {\r\n        if(document.querySelector(`.btn${params.page}`)){\r\n            document.querySelectorAll('.page_btn').forEach(btn => btn.classList.remove('active'))\r\n            document.querySelectorAll(`.btn${params.page}`).forEach(btn => btn.classList.add('active'))\r\n        }\r\n    }\r\n    \r\n    useEffect(() => {\r\n        \r\n        axios.get(`https://api.themoviedb.org/3/${props.category}/${props.url}?api_key=${code}&language=en-US&page=${params.page}`)\r\n            .then(res => {\r\n                setinfos(res.data);\r\n                const queryPage = Number(query.get('page')) || 1;\r\n                const paginationArray = Array.from({length : res.data.total_pages}, (_, i) => i + 1);\r\n                \r\n                const firstPages = paginationArray.slice(0, 5);\r\n                const lastPages = paginationArray.slice(paginationArray.length - 5);\r\n                const otherPages = firstPages.includes(queryPage) || lastPages.includes(queryPage) ? [] : Array.from({length : 5}, (_, i) => queryPage + i - 1)\r\n                setparams({\r\n                    ...params,\r\n                    page : queryPage,\r\n                    pathname : props.location.pathname\r\n                });\r\n                setPagination({\r\n                    ...pagination,\r\n                    firstPages,\r\n                    lastPages,\r\n                    otherPages\r\n                })\r\n\r\n                props.history.push(`?page=${params.page}`);  \r\n                \r\n            });\r\n        \r\n    }, []);\r\n    useEffect(() => {\r\n        if(params.pathname !== props.location.pathname){\r\n            axios.get(`https://api.themoviedb.org/3/${props.category}/${props.url}?api_key=${code}&language=en-US&page=${params.page}`)\r\n            .then(res => {\r\n                setinfos(res.data); \r\n                setparams({\r\n                    ...params,\r\n                    page : 1,\r\n                    pathname : props.location.pathname\r\n                });\r\n                const paginationArray = Array.from({length : res.data.total_pages}, (_, i) => i + 1);\r\n                const queryPage = Number(query.get('page')) || 1;\r\n                \r\n                const firstPages = paginationArray.slice(0, 5);\r\n                const lastPages = paginationArray.slice(paginationArray.length - 5);\r\n                const otherPages = firstPages.includes(queryPage) || lastPages.includes(queryPage) ? [] : Array.from({length : 5}, (_, i) => queryPage + i - 1)\r\n                setPagination({\r\n                    ...pagination,\r\n                    firstPages,\r\n                    lastPages,\r\n                    otherPages\r\n                })\r\n            });\r\n        }\r\n        return\r\n        \r\n    })\r\n\r\n    useEffect(() => {\r\n        // console.log(params);\r\n        props.history.push(`?page=${params.page}`);  \r\n        if(params.page >= pagination.firstPages[pagination.firstPages.length - 1]  &&\r\n            !pagination.otherPages.includes(params.page)){\r\n                const otherPages = Array.from({length : 5}, (_, i) => params.page + i - 1 );\r\n                setPagination({\r\n                    ...pagination,\r\n                    otherPages\r\n                })\r\n        }\r\n        if(params.page === pagination.lastPages[0]  &&\r\n            !pagination.otherPages.includes(params.page)){\r\n                const otherPages = Array.from({length : 5}, (_, i) => params.page + i - 3 );\r\n                setPagination({\r\n                    ...pagination,\r\n                    otherPages\r\n                })\r\n        }\r\n        if(params.page === pagination.otherPages[pagination.otherPages.length - 1] || params.page === pagination.otherPages[0]){\r\n            \r\n            const otherPages = Array.from({length : 5}, (_, i) => params.page + i - 1 );\r\n            setPagination({\r\n                ...pagination,\r\n                otherPages\r\n            })\r\n        }\r\n        addActive();\r\n        \r\n        \r\n        \r\n        axios.get(`https://api.themoviedb.org/3/${props.category}/${props.url}?api_key=${code}&language=en-US&page=${params.page}`)\r\n            .then(res => {\r\n                setinfos(res.data); \r\n            });\r\n\r\n    }, [params])\r\n\r\n    useEffect(() => {\r\n        addActive();\r\n    }, [pagination]);\r\n\r\n    const changePage = (e) => {\r\n        setparams({\r\n            ...params,\r\n            page : Number(e.target.textContent)\r\n        });\r\n    };\r\n\r\n    const next = () => {\r\n        let page = params.page+1;\r\n        page = page > Number(infos.total_pages) ? Number(infos.total_pages) : page\r\n        setparams({\r\n            ...params,\r\n            page\r\n        })\r\n    }\r\n\r\n    const prev = () => {\r\n        let page = params.page - 1;\r\n        page = page < 1 ? 1 : page\r\n        setparams({\r\n            ...params,\r\n            page\r\n        })\r\n    }\r\n\r\n    return ( \r\n        <div className='browse'>\r\n            <h1>{props.showCategory} {props.category}</h1>\r\n            <div className='pagination'>\r\n                <div className='paginationPC'>\r\n                    <Pagination pagination={pagination} params={params} category='pc' next={next} prev={prev} changePage={changePage}/>\r\n                </div>\r\n                <div className='paginationMobile'>\r\n                    <Pagination pagination={pagination} params={params} category='mobile' next={next} prev={prev} changePage={changePage}/>\r\n                </div>\r\n            </div>\r\n            <div className='page_content'>\r\n                <BrowseComponent infos={infos} params={params} />\r\n            </div>\r\n            <div className='pagination'>\r\n                <div className='paginationPC'>\r\n                    <Pagination pagination={pagination} params={params} category='pc' next={next} prev={prev} changePage={changePage}/>\r\n                    \r\n                </div>\r\n                <div className='paginationMobile'>\r\n                    <Pagination pagination={pagination} params={params} category='mobile' next={next} prev={prev} changePage={changePage}/>\r\n                </div>\r\n            </div>\r\n        </div>\r\n     );\r\n}\r\n \r\nexport default memo(Browse);","import React, {useState, useEffect, useContext} from 'react';\r\nimport axios from 'axios';\r\nimport { API_CODE } from '../../context/apiCode';\r\nimport '../../styles/css/advance.css';\r\nimport {Link} from 'react-router-dom';\r\nimport noImage from '../../assets/noImage.png'\r\n\r\nconst AdvanceSearch = () => {\r\n    window.scrollTo(0, 0);\r\n    const {code} = useContext(API_CODE);\r\n    const [info, setInfo] = useState([]);\r\n    const [params, setParams] = useState({\r\n        genre : [{}],\r\n        sort_movie : ['popularity.desc','popularity.asc', 'release_date.asc', 'release_date.desc', 'revenue.asc', 'revenue.desc', 'primary_release_date.asc',\r\n                'primary_release_date.desc', 'original_title.asc', 'original_title.desc', 'vote_average.asc', 'vote_average.desc', 'vote_count.asc', 'vote_count.desc'],\r\n        sort_tv : ['popularity.desc','popularity.asc','vote_average.asc', 'vote_average.desc', 'first_air_date.asc', 'first_air_date.desc', ],\r\n        sort : 'popularity.desc',\r\n        category : 'movie',\r\n        vote_average : '0',\r\n        genre_choice : '',\r\n        year : '',\r\n        pages : '1'\r\n    });\r\n\r\n    useEffect(() => {\r\n        axios.get(`https://api.themoviedb.org/3/genre/${params.category}/list?api_key=${code}&language=en-US`)\r\n            .then(res => {\r\n\r\n                setParams({\r\n                    ...params,\r\n                    genre : res.data.genres\r\n                });\r\n            })\r\n            .catch(err => console.log(err));\r\n        axios.get(`https://api.themoviedb.org/3/discover/${params.category}?api_key=${code}&language=en-US&sort_by=${params.sort}&vote_average.gte=${params.vote_average}&with_genre=${params.genre_choice}&year=${params.year}&page=${params.pages}`)\r\n            .then(res => {\r\n                setInfo(res.data.results);\r\n            })\r\n    },[]);\r\n\r\n\r\n    const onChangeParams = (key, value) => {\r\n        setParams({\r\n            ...params,\r\n            [key] : value\r\n        })\r\n    }\r\n\r\n    const submit = (e) => {\r\n        e.preventDefault();\r\n        setParams({\r\n            ...params,\r\n            pages : '1',\r\n        });\r\n        axios.get(`https://api.themoviedb.org/3/discover/${params.category}?api_key=${code}&language=en-US&sort_by=${params.sort}&vote_average.gte=${params.vote_average}&with_genre=${params.genre_choice}&year=${params.year}&page=1`)\r\n            .then(res => {\r\n                setInfo(res.data.results);\r\n            })\r\n    }\r\n\r\n    const loadMore = () => {\r\n        let page = Number(params.pages)+1;\r\n        \r\n        axios.get(`https://api.themoviedb.org/3/discover/${params.category}?api_key=${code}&language=en-US&sort_by=${params.sort}&vote_average.gte=${params.vote_average}&with_genre=${params.genre_choice}&year=${params.year}&page=${page}`)\r\n            .then(res => {\r\n                console.log(res);\r\n                setInfo([...info, ...res.data.results]);\r\n                setParams({\r\n                    ...params,\r\n                    pages : page.toString()\r\n                });\r\n            });\r\n            \r\n\r\n\r\n    }\r\n\r\n    const advance_content = info.map((show, i) => (\r\n        <div key={i} className='poster'>\r\n            <div className='poster_container'>\r\n                    <img src={`http://image.tmdb.org/t/p/w500//${show.poster_path}` || noImage} alt={show.original_title || show.original_name}/>\r\n                <Link to={`/${show.original_title? 'movie' : 'tv'}/${show.id}`}>\r\n                    <div className='posterHover'>\r\n                        <h3>{show.vote_average} / 10</h3>\r\n                        <h1>View Details</h1>\r\n                    </div>\r\n\r\n                </Link>\r\n            </div>\r\n            <div className='poster_title'>\r\n                <h4>{show.original_title || show.original_name}</h4>\r\n\r\n            </div>\r\n        </div>\r\n    ))\r\n\r\n    const toggleFormFilter = () => {\r\n        document.querySelector('.filterForm').classList.toggle('activeFilterForm');\r\n    }\r\n    return ( \r\n        <div className='advanceSearch'>\r\n            <div className='filterForm'>\r\n                <h1>Filter</h1>\r\n                <form onSubmit={submit}>\r\n                    <div>\r\n                        <label htmlFor='genres'>Genres</label>\r\n                        <select id='genres' onChange={(e) => onChangeParams('genre_choice', e.target.value)}>\r\n                        <option value=''>All</option>\r\n                            {params.genre.map((genre, i) => (\r\n                                <option key={i} value={genre.id}>{genre.name}</option>\r\n                            ))}\r\n                            \r\n                        </select>\r\n                    </div>\r\n                    <div>\r\n                        <label htmlFor='category'>Category</label>\r\n                        <select id='category' onChange={(e) => onChangeParams('category', e.target.value)}>\r\n                            <option value='movie'>Movie</option>\r\n                            <option value='tv'>TV</option>\r\n                            \r\n                        </select>\r\n                    </div>\r\n                    <div>\r\n                        <label htmlFor='sortBy'>Sort By</label>\r\n                        <select id='sortBy' onChange={(e) => onChangeParams('sort', e.target.value)}>\r\n                            {params.category === 'movie' ? params.sort_movie.map((genre, i) => (\r\n                                <option key={i} value={genre}>{genre}</option>\r\n                            )) : params.sort_tv.map((genre, i) => (\r\n                                <option key={i} value={genre}>{genre}</option>\r\n                            ))}\r\n                            \r\n                        </select>\r\n                    </div>\r\n                    <div>\r\n                        <label htmlFor='year'>Year</label>\r\n                        <input type='number' id='year' min={params.category === 'movie' ? 1874 : 1883} max={new Date(Date.now()).getFullYear()} minLength='4' maxLength='4' defaultValue='' onChange={(e) => onChangeParams('year', e.target.value)}/>\r\n                    </div>\r\n\r\n                    <div>\r\n                        <label htmlFor='vote_ave'>Vote Average</label>\r\n                        <input type='number' id='vote_ave' min='0' max='10' defaultValue='' onChange={(e) => onChangeParams('vote_average', e.target.value)} />\r\n                    </div>\r\n                    <input type='submit' />\r\n                </form>\r\n                \r\n            </div>\r\n            <div className='advance-content-container'>\r\n                <h1>Advance Search</h1>\r\n                <div className='advance-content'>\r\n                    {advance_content}  \r\n                </div>\r\n                <button onClick={loadMore} className='loadMore'>Load More</button>\r\n\r\n            </div>\r\n            \r\n            \r\n            <div className='filter-icon'>\r\n                <i onClick={toggleFormFilter} className='fa fa-filter'></i>\r\n                \r\n            </div>\r\n            \r\n\r\n        </div>\r\n     );\r\n}\r\n \r\nexport default AdvanceSearch;","import React, {useEffect, useState, useContext} from 'react';\r\nimport axios from 'axios';\r\nimport { API_CODE } from '../../context/apiCode';\r\nimport {Link} from 'react-router-dom';\r\nimport '../../styles/css/viewAll.css'\r\n\r\nconst ViewAll = (props) => {\r\n    window.scrollTo(0, 0);\r\n    const {code} = useContext(API_CODE);\r\n    const [infos, setInfos] = useState({\r\n        results : [{}]\r\n    });\r\n\r\n    useEffect(() => {\r\n        axios.get(`https://api.themoviedb.org/3${props.location.pathname}?api_key=${code}`).then(res => {\r\n            setInfos(res.data);\r\n        });\r\n    },[]);\r\n\r\n    return ( \r\n        <div className='viewAll'>\r\n            <h1>{props.title}</h1>\r\n            <div className='content'>\r\n                {\r\n                    infos.results.map((show, i) => (\r\n                        <div key={i} className='poster'>\r\n                            <div className='poster_container'>\r\n                                    <img src={`http://image.tmdb.org/t/p/w500//${show.poster_path}`} alt={show.original_title || show.original_name}/>\r\n                                <Link to={`/${show.original_title? 'movie' : 'tv'}/${show.id}`}>\r\n                                    <div className='posterHover'>\r\n                                        <h3>{show.vote_average} / 10</h3>\r\n                                        <h1>View Details</h1>\r\n                                    </div>\r\n\r\n                                </Link>\r\n                            </div>\r\n                            <div className='poster_title'>\r\n                                <h4>{show.original_title || show.original_name}</h4>\r\n\r\n                            </div>\r\n                        </div>\r\n                    ))\r\n                }\r\n\r\n            </div>\r\n\r\n        </div>\r\n     );\r\n}\r\n \r\nexport default ViewAll;","import React, {Suspense, lazy, useEffect, useState} from 'react';\nimport NavBar from './components/nav/nav';\nimport {HashRouter as Router, Route, Switch} from 'react-router-dom';\nimport ApiCode from './context/apiCode';\nimport Footer from './components/footer/footer';\nimport Details from './components/details/details';\nimport Browse from './components/browse/browse';\nimport AdvanceSearch from './components/advanceSearch/advanceSearch';\nimport ViewAll from './components/viewAllTrending/viewAllTrending';\n\n\nconst Home = lazy(() => import('./components/home.js/home'));\n\nconst App = () => {\n  // const [pathname, setPathname] = useState();\n\n  const movieURList = ['popular', 'now_playing', 'top_rated', 'upcoming'];\n  const tvURList = ['popular', 'airing_today', 'on_the_air', 'top_rated'];\n  const URLList = [\n    {\n      show : 'movie',\n      category : 'Popular',\n      url : 'popular'\n    },\n    {\n      show : 'movie',\n      category : 'Now Playing',\n      url : 'now_playing'\n    },\n    {\n      show : 'movie',\n      category : 'Top Rated',\n      url : 'top_rated'\n    },\n    {\n      show : 'movie',\n      category : 'Upcoming',\n      url : 'upcoming'\n    },\n    {\n      show : 'tv',\n      category : 'Popular',\n      url : 'popular'\n    },\n    {\n      show : 'tv',\n      category : 'Airing Today',\n      url : 'airing_today'\n    },\n    {\n      show : 'tv',\n      category : 'On the Air',\n      url : 'on_the_air'\n    },\n    {\n      show : 'tv',\n      category : 'Top Rated',\n      url : 'top_rated'\n    },\n  ]\n  return (\n    <Router>\n      <Suspense fallback={<div></div>}>\n        <ApiCode>\n          <header>\n            <NavBar />\n          </header>\n          <div className=\"App\">\n            <main>\n              \n              <Switch>\n                <Route exact path='/' component={Home} />\n                <Route path='/movie/:id' component={Details} />\n                <Route path='/tv/:id' component={Details} />\n                {URLList.map(show => (\n                  <Route path={`/browse/${show.show}/${show.url}`} render={(props) => <Browse {...props} url={show.url} showCategory={show.category} category={show.show} />} />\n                ))}\n                <Route path='/advance-search' component={AdvanceSearch} />\n                <Route path='/trending/movie' render={(props) => <ViewAll {...props} title='Trending Movies' />} />\n                <Route path='/trending/tv' render={(props) => <ViewAll {...props} title='Trending TV Shows' />} />\n              </Switch>\n            </main>\n            <footer>\n              <Footer />\n            </footer>\n          </div>\n        </ApiCode>\n      </Suspense>\n    </Router>\n    \n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n// import {}\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}